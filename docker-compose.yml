services:
  langfuse-server:
    image: langfuse/langfuse:2
    container_name: langfuse-server
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - netbot
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@langfuse-database:5432/postgres
      - NEXTAUTH_SECRET=mysecret
      - SALT=mysalt
      - ENCRYPTION_KEY=0000000000000000000000000000000000000000000000000000000000000000 # generate via `openssl rand -hex 32`
      - NEXTAUTH_URL=http://localhost:3000
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
      - LANGFUSE_INIT_ORG_ID=${LANGFUSE_INIT_ORG_ID:-}
      - LANGFUSE_INIT_ORG_NAME=${LANGFUSE_INIT_ORG_NAME:-}
      - LANGFUSE_INIT_PROJECT_ID=${LANGFUSE_INIT_PROJECT_ID:-}
      - LANGFUSE_INIT_PROJECT_NAME=${LANGFUSE_INIT_PROJECT_NAME:-}
      - LANGFUSE_INIT_PROJECT_PUBLIC_KEY=${LANGFUSE_INIT_PROJECT_PUBLIC_KEY:-}
      - LANGFUSE_INIT_PROJECT_SECRET_KEY=${LANGFUSE_INIT_PROJECT_SECRET_KEY:-}
      - LANGFUSE_INIT_USER_EMAIL=${LANGFUSE_INIT_USER_EMAIL:-}
      - LANGFUSE_INIT_USER_NAME=${LANGFUSE_INIT_USER_NAME:-}
      - LANGFUSE_INIT_USER_PASSWORD=${LANGFUSE_INIT_USER_PASSWORD:-}

  db:
    image: postgres
    container_name: langfuse-database
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    networks:
      - netbot
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
    volumes:
      - database_data:/var/lib/postgresql/data

  back-end-container:
    container_name: backend
    build: ./Back-end
    volumes:
    - ./models/Llama-3.2-1B-Instruct-Q3_K_L.gguf:/Backend/models/Meta-Llama-3.1-8B-Instruct-Q6_K_L.gguf
    - ./Back-end:/Backend
    ports:
      - "8000:8000"
    networks:
      - netbot
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all # alternatively, use `count: all` for all GPUs
              capabilities: [gpu]
  
  front-end-container:
    container_name: frontend
    build: ./Front-end
    volumes:
      - ./Front-end:/Frontend
    ports:
      - "8501:8501"
      - "8502:8502"
    networks:
      - netbot
    depends_on:
      - back-end-container

volumes:
  database_data:
    driver: local

networks:
  netbot:
    driver: bridge
